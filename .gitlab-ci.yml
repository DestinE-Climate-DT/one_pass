stages:
  - prepare
  - lint
  - test

prepare:
  tags:
    - csccloud
  artifacts:
    paths:
      - venv
    expire_in: 20 minutes
  stage: prepare
  script:
    - echo running on $HOST as $USER
    - python3.9 -m venv venv
    - source venv/bin/activate
    - pip3.9 install -e .[all]
    - pip3.9 install pylint


lint-opa:
  allow_failure: true
  tags:
    - csccloud
  stage: lint
  script:
    - source venv/bin/activate
    - pylint one_pass/opa.py

lint-check_stat:
  allow_failure: true
  tags:
    - csccloud
  stage: lint
  script:
    - source venv/bin/activate
    - pylint one_pass/check_stat.py

lint-util:
  allow_failure: true
  tags:
    - csccloud
  stage: lint
  script:
    - source venv/bin/activate
    - pylint one_pass/util.py

lint-convert_time:
  allow_failure: true
  tags:
    - csccloud
  stage: lint
  script:
    - source venv/bin/activate
    - pylint one_pass/convert_time.py

lint-init:
  allow_failure: true
  tags:
    - csccloud
  stage: lint
  script:
    - source venv/bin/activate
    - pylint one_pass/__init__.py



test:
  variables:
    SCHEDULER_PARAMETERS: "-N 1 -t 03:00:00"
  tags:
    - csccloud
  stage: test
  script:
    - source venv/bin/activate
    - pytest --cov-report xml --cov-report term-missing --cov=one_pass tests/
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  # These artifacts are saved with every build in GitLab and can be reviewed later. If
  # we have a folder with HTML files, as in this example, users can navigate with their
  # browser.
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

